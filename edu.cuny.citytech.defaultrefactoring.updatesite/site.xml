<?xml version="1.0" encoding="UTF-8"?>
<site>
   <description name="Migrate Skeletal Implementation to Interface Refactoring Update Site" url="https://raw.githubusercontent.com/khatchad/Migrate-Skeletal-Implementation-to-Interface-Refactoring/tree/master/edu.cuny.citytech.defaultrefactoring.updatesite">
      The skeletal implementation pattern is a software design pattern consisting of defining an abstract class that provides a partial interface implementation. However, since Java allows only single class inheritance, if implementers decide to extend a skeletal implementation, they will not be allowed to extend any other class. Also, discovering the skeletal implementation may require a global analysis. Java 8 enhanced interfaces alleviate these problems by allowing interfaces to contain (default) method implementations, which implementers inherit. Java classes are then free to extend a different class, and a separate abstract class is no longer needed; developers considering implementing an interface need only examine the interface itself. Both of these benefits improve software modularity.

This prototype refactoring plug-in for Eclipse represents ongoing work in developing an automated refactoring tool that would assist developers in taking advantage of the enhanced interface feature for their legacy Java software.
   </description>
   <feature url="features/edu.cuny.citytech.migrate.skeletal.implementation.to.interface.refactoring_0.4.0.201607271003.jar" id="edu.cuny.citytech.migrate.skeletal.implementation.to.interface.refactoring" version="0.4.0.201607271003">
      <category name="edu.cuny.citytech.refactoring"/>
   </feature>
   <category-def name="edu.cuny.citytech.refactoring" label="Java Refactorings"/>
</site>
